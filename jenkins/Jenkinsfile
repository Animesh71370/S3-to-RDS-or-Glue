pipeline {
    agent any
    
    environment {
        ECR_REPO = '343426788810.dkr.ecr.ap-south-1.amazonaws.com/s3-to-rds-or-glue'
        GITHUB_REPO = 'https://github.com/Animesh71370/S3-to-RDS-or-Glue.git'
        AWS_REGION = 'ap-south-1'
    }
    
    stages {
        stage('Clone Repository') {
            steps {
                git credentialsId: 'github-jenkins-pat', url: "${GITHUB_REPO}", branch: 'main'
            }
        }
        
        stage('Build Docker Image') {
            steps {
                bat 'docker build -t s3-to-rds-or-glue .'
            }
        }
        
        stage('Push to ECR') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    bat '''
                        aws ecr get-login-password --region %AWS_REGION% | docker login --username AWS --password-stdin %ECR_REPO%
                        docker tag s3-to-rds-or-glue:latest %ECR_REPO%:latest
                        docker push %ECR_REPO%:latest
                    '''
                }
            }
        }
        
        stage('Initialize Terraform') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    bat 'terraform init'
                }
            }
        }

        stage('Apply Terraform') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'aws-credentials', usernameVariable: 'AWS_ACCESS_KEY_ID', passwordVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    bat 'terraform apply -auto-approve'
                }
            }
        }
    }
}